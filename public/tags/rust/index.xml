<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Hugo Theme Stack Starter</title>
    <link>https://blog.5-23.dev/tags/rust/</link>
    <description>Recent content in Rust on Hugo Theme Stack Starter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.5-23.dev/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Zero부터 시작하는 bevy - 0</title>
      <link>https://blog.5-23.dev/p/bevy-0/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.5-23.dev/p/bevy-0/</guid>
      <description>bevy - 0 배비 설정및 화면 띄우기&#xA;베비 설치 1 2 3 cargo new zero2bevy cd zero2bevy cargo add bevy 설치가 완료됐으면 다음과 같은 코드를 작성하여 실행해보자. 설치가 정상적으로 됐으면 오류가 없이 실행될꺼다.&#xA;1 2 3 4 use bevy::prelude::*; fn main() { App::new().run(); } 실행 이벤트 감지 베비는 add_systems(Startup, 함수)를 사용하여 실행 이벤트를 감시할수 있다&#xA;1 2 3 4 5 6 7 8 9 use bevy::prelude::*; fn main() { App::new() .</description>
    </item>
    <item>
      <title>연산자 오버로드</title>
      <link>https://blog.5-23.dev/p/rust-syntax-ops/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.5-23.dev/p/rust-syntax-ops/</guid>
      <description>rust에서 연산자 오버로드를 사용하려면 std::ops에 있는 trait을 상속 시키면 된다&#xA;아레 코드는 Vec2끼리 더하기를 가능하게 하는 코드다&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 use std::ops::Add; struct Vec2 { x: f32, y: f32, } // Add 상속 impl Add for Vec2 { // 더했을때 반환할 타입 type Output = Vec2; /* let a = Vec2{x: 1.</description>
    </item>
  </channel>
</rss>
