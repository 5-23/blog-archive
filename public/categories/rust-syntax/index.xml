<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust-Syntax on Hugo Theme Stack Starter</title>
    <link>http://localhost:1313/categories/rust-syntax/</link>
    <description>Recent content in Rust-Syntax on Hugo Theme Stack Starter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/rust-syntax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>연산자 오버로드</title>
      <link>http://localhost:1313/p/rust-syntax-ops/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/p/rust-syntax-ops/</guid>
      <description>rust에서 연산자 오버로드를 사용하려면 std::ops에 있는 trait을 상속 시키면 된다&#xA;아레 코드는 Vec2끼리 더하기를 가능하게 하는 코드다&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 use std::ops::Add; struct Vec2 { x: f32, y: f32, } // Add 상속 impl Add for Vec2 { // 더했을때 반환할 타입 type Output = Vec2; /* let a = Vec2{x: 1.</description>
    </item>
  </channel>
</rss>
